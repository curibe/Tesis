import numpy as np
import matplotlib.pyplot as plt
import os
import commands as cm

#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# UTIL CONSTANT
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
HOURS=3600.0
DAYS=24*HOURS
YEARS=365.25*DAYS
AU=1.49597870700e8 
RSOI=4.8305783e7
RJUP=71492.0


#==============
# SHORCUTS
#==============
system=os.system
get=cm.getoutput
getdir=os.getcwd
chdir=os.chdir

#==============
# PATHS
#==============
#HOME=get("echo $HOME")
Principal=getdir()
InitDir=Principal+"/Cond_Iniciales/"
BinDir=Principal+"/BIN/"
RunDir=Principal+"/RUNDIR/"
AnalDir=Principal+"/Analysis/"
SrcDir=AnalDir+"src/"

#===========================
# PARAMETERS
#===========================
Nbins=100.0
NameFile="OrbElms_SUN.orb"
#NameFile=Capture.dat

#===========================
# LOADING FILES
#===========================
filename=SrcDir+NameFile
#a,Q,e,inc=np.loadtxt(filename, usecols=[0,1,2,3])
a,Q,e,inc=np.loadtxt(filename, usecols=[0,1,2,3],unpack=True)

#*************************
# Converting SMAxis to AU
#*************************
a=a/AU
Q=Q/AU



#=========================================
# DEFINING MAXIMUM AND MINIMUM
#=========================================
#************ Semimajor Axis************
MaxA=np.ceil(a.max())
MinA=np.floor(a.min())
dxA=(MaxA-MinA)/Nbins
#************ Aphelion******************
MaxQ=np.ceil(Q.max())
MinQ=np.floor(Q.min())
dxQ=(MaxQ-MinQ)/Nbins
#************ Eccentricity *************
MaxE=np.ceil(e.max())
MinE=np.floor(e.min())
dxE=(MaxE-MinE)/Nbins
#************ Inclination **************
MaxI=np.ceil(inc.max())
MinI=np.floor(inc.min())
dxI=(MaxI-MinI)/Nbins



#=========================================
#        DEFINING BINS
#=========================================
#************ Semimajor Axis***********
BinA=np.arange(MinA,MaxA+dxA/2.0,dxA)
dimA=len(BinA-1)
inA=BinA.searchsorted(a.max())
Alim=BinA[inA]
#************ Aphelion******************
BinQ=np.arange(MinQ,MaxQ+dxQ/2.0,dxQ)
dimQ=len(BinQ-1)
inQ=BinQ.searchsorted(Q.max())
Qlim=BinQ[inQ]
#************ Eccentricity *************
BinE=np.arange(MinE,MaxE+dxE/2.0,dxE)
dimE=len(BinE-1)
inE=BinE.searchsorted(e.max())
Elim=BinE[inE]
#************ Inclination **************
BinI=np.arange(MinI,MaxI+dxI/2.0,dxI)
dimI=len(BinI-1)
inI=BinI.searchsorted(inc.max())
Ilim=BinI[inI]



#=====================================================================
#                              PLOTS    
#=====================================================================

#****************************************************
#                 SEMIMAJOR AXIS
#****************************************************
fig1=plt.figure()
Adist=fig1.add_subplot(111)
NA=Adist.hist(a,BinA,color='blue',alpha=0.75,histtype='step')[0]
Adist.set_xlim([MinA,70])
Adist.set_xlabel('Semimajor Axis (AU)')
Adist.set_ylabel('Number of Objects')


#****************************************************
#                    APHELION
#****************************************************
fig2=plt.figure()
Qdist=fig2.add_subplot(111)
NQ=Qdist.hist(Q,BinQ,facecolor='green',alpha=0.75,histtype='step')[0]
Qdist.set_xlim([MinQ,MaxQ])
Qdist.set_xlabel('Aphelion (AU)')
Qdist.set_ylabel('Number of Objects')


#****************************************************
#                    ECCENTRICITY
#****************************************************
fig3=plt.figure()
Edist=fig3.add_subplot(111)
NE=Edist.hist(e,BinE,color='red',alpha=0.75,histtype='step')[0]
Edist.set_xlim([MinE,MaxE])
Edist.set_xlabel('Eccentricity')
Edist.set_ylabel('Number of Objects')


#****************************************************
#                    INCLINATION
#****************************************************
fig4=plt.figure()
Idist=fig4.add_subplot(111)
NI=Idist.hist(inc,BinI,color='magenta',alpha=0.75,histtype='step')[0]
Idist.set_xlim([MinI,MaxI])
Idist.set_xlabel('Inclination (rad or deg)')
Idist.set_ylabel('Number of Objects')


plt.show()







